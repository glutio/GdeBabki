@using GdeBabki.Client.Model
@using System.ComponentModel
@implements IDisposable

@if (Model.IsLoaded)
{
    var style = Model.IsBusy ? "pointer-events: none;position: relative;" : "";
    <div style="@style">
        @ChildContent
        @if (Model.IsBusy)
        {
            <div class="busy-overlay"/>
            <div class="busy-overlay busy-indicator-overlay">
                <img class="busy-indicator" src="/img/rich-mouse.gif" />
            </div>
        }
    </div>
}
else
{
    <p>Loading...</p>
}

@code {
    [Parameter]
    public RenderFragment ChildContent { get; set; }
    [Parameter]
    public ViewModelBase Model { get; set; }
    
    protected override void OnInitialized()
    {
        Model.PropertyChanged += OnModelPropertyChanged;
        base.OnInitialized();
    }

    void OnModelPropertyChanged(object sender, PropertyChangedEventArgs args)
    {
        if (args.PropertyName == nameof(Model.IsBusy) || args.PropertyName == nameof(Model.IsLoaded))
        {
            StateHasChanged();
        }
    }

    public void Dispose()
    {
        Model.PropertyChanged -= OnModelPropertyChanged;
    }
}
