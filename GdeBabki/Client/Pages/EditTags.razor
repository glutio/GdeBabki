@using System.ComponentModel
@inherits ViewBase<EditTagsViewModel>

<div>
        @foreach (var tag in Model.Tags)
        {
            <div style="float:left" class="abc">
                <div style="padding:0.4rem;margin:2px;border-radius:5px;background-color:dimgray;color:white">
                    <a href="#" style="color:lightgrey" @onclick="() => Model.DeleteTag(tag)" @onclick:preventDefault="true">🗙</a>&nbsp;@tag
                </div>
            </div>
        }
        <div style="float:left">
            <input @ref="refTextBox" type="text" style="outline:none;background-color:transparent;padding:0.4rem;border-width:0 0 1px 0" 
                   @bind-value:event="oninput" @onkeydown="OnKeyDown" @bind-value="Model.Tag" />
        </div>
    
</div>
@if (Model.SuggestedTags != null)
{
    <div>
        <select size="5">
            @foreach (var tag in Model.SuggestedTags)
            {
                <option value="@tag"></option>
            }
        </select>
    </div>
}
@code {
    [Parameter]
    public List<string> Tags { get; set; }
    [Parameter]
    public EventCallback<List<string>> TagsUpdated { get; set; }

    ElementReference refTextBox;
    async Task OnKeyDown(KeyboardEventArgs e)
    {
        switch (e.Key)
        {
            case "Enter":
                Model.AddTag();
                break;
            case "Backspace":
                Model.DeleteLastTag();
                break;
            default:
                return;
        }
        await TagsUpdated.InvokeAsync(Model.Tags);
    }

    protected override void OnInitialized()
    {
        Model.Tags = Tags;
        base.OnInitialized();
    }
}
