@inherits ViewBase<EditAccountViewModel>
@inject DialogService dialogService

@if (Model.IsLoaded)
{
    <div class="row">
        <div class="col-4">
            <p><b>Account name</b></p>
            <RadzenTextBox @bind-Value="@Account.Name" Placeholder="account name" Style="width:100%;" />
        </div>
        <div class="col-3">
            <p><b>Bank</b></p>
            <RadzenDropDown TValue="Guid" ValueProperty="Id" @bind-Value="@Account.Bank.Id" Data="Model.Banks" TextProperty="Name" Style="width:100%" />
            <div>
                <RadzenButton Click="OnAddDeleteClick">Add/Delete Banks</RadzenButton>
            </div>
        </div>
        <div class="col-5">
            <p>&nbsp;</p>
            <RadzenButton Click="OnSaveClick">Save</RadzenButton>
            <RadzenButton Click="OnCancelClick">Cancel</RadzenButton>
        </div>
    </div>
}
else
{
    <p>Loading...</p>
}

@code {
    [Parameter]
    public Account Account { get; set; }
    [Parameter]
    public EventCallback Cancel { get; set; }
    [Parameter]
    public EventCallback<Account> Save { get; set; }

    async void OnAddDeleteClick()
    {
        await dialogService.OpenAsync<Banks>("Add/Delete Banks");
    }

    async void OnSaveClick()
    {
        await Save.InvokeAsync(Account);
    }

    async void OnCancelClick()
    {
        await Cancel.InvokeAsync();
    }
}
