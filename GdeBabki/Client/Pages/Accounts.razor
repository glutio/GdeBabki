@page "/accounts"
@inherits ViewBase<AccountsViewModel>
@inject ErrorService es

<h3>Accounts</h3>
@if (Model.IsLoaded)
{
    <RadzenDataList TItem="Account" Data="Model.Accounts">
        <Template>
            <RadzenCard>
                @if (Model.EditingAccount == context)
                {
                    <EditAccount Account="context" Cancel="OnEditCancel" Save="OnEditSave" />
                }
                else
                {
                    <div class="d-flex justify-content-between">
                        <div class="row w-100 flex-nowrap align-items-center">
                            <div class="col-4">
                                @context.Name
                            </div>
                            <div class="col-8">
                                <b>@context.Bank.Name</b>
                            </div>
                        </div>
                        <div class="d-flex">
                            <RadzenButton Text="Edit" class="mr-2" Click="() => OnEditClick(context)"></RadzenButton>
                            <RadzenButton Text="Delete" Click="() => OnDeleteClick(context)" ButtonStyle="ButtonStyle.Danger"></RadzenButton>
                        </div>
                    </div>
                }
            </RadzenCard>
        </Template>
    </RadzenDataList>

    if (Model.EditingAccount == null)
    {
        <hr />    
        <RadzenButton Click="OnAddClick" class="m-2">Add</RadzenButton>       
    }
}
else
{
    <p>Loading...</p>
}

@code {
    void OnAddClick()
    {
        Model.NewAccount();
    }

    void OnEditClick(Account account)
    {
        Model.EditAccount(account);
    }

    async Task OnEditSave(Account account)
    {
        try
        {
            await Model.SaveAccountAsync(account);
        }
        catch (Exception e)
        {
            es.AddError(e.ToString());
        }
    }

    void OnEditCancel()
    {
        Model.CancelEditingAccount();
    }

    void OnDeleteClick(Account account)
    {
        Model.DeleteAccount(account.Id);
    }
}
