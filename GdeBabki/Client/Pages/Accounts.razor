@page "/accounts"
@inject AccountsViewModel Model

@inject DialogService dialogService

<h3>Accounts</h3>
@if (Model.IsLoaded)
{
    <RadzenDataList TItem="Account" Data="Model.Accounts">
        <Template>
            <RadzenCard>
                @if (Model.EditingAccount == context)
                {
                    <EditAccount Account="context" Cancel="OnEditCancel" Save="OnEditSave"/>
                }
                else
                {
                    <div class="row">

                        <div class="col-3">
                            @context.Name
                        </div>
                        <div class="col-3">
                            <b>@context.Bank.Name</b>
                        </div>
                        <div class="col">
                            <RadzenButton Text="Edit" Click="() => OnEditClick(context)"></RadzenButton>
                            <RadzenButton Text="Delete" Click="() => OnDeleteClick(context)"></RadzenButton>
                       </div>
                    </div>
                }
            </RadzenCard>
        </Template>
    </RadzenDataList>

    <RadzenButton Click="OnAddClick">Add</RadzenButton>
}
else
{
    <p>Loading...</p>
}

@code {
    protected override async Task OnInitializedAsync()
    {
        Model.PropertyChanged += (s, e) => StateHasChanged();
        await Model.InitializeAsync();
    }

    void OnAddClick()
    {
        Model.NewAccount();
    }

    void OnEditClick(Account account)
    {
        Model.EditAccount(account);
    }

    void OnEditSave()
    {
        Model.EditingAccount = null;
    }

    void OnEditCancel()
    {
        Model.CancelEditingAccount();
    }

    void OnDeleteClick(Account account)
    {
        Model.DeleteAccount(account.Id);
    }
}
